services:
  backend:
    build: ./api
    ports:
      - 8000:8000
    volumes:
      - ./api/:/api/
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USERNAME}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB_NAME}
      DB_PORT: ${POSTGRES_DB_PORT}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
      ADMIN_USERNAME: ${DJANGO_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
    depends_on:
      - db

  # nginx:
  #   build: ./nginx
  #   ports:
  #     - 443:443
  #     - 80:80
  
  # frontend:
  #   build: ./admin-panel
  # ports:
  #   - 3000:3000

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PORT: ${POSTGRES_DB_PORT}
    volumes:
      - ./data/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

 