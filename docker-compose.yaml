services:
  backend:
    build: ./api
    ports:
      - 8000:8000
    volumes:
      - ./api/:/app/:cached
    environment:
      DB_HOST: db
      DB_USER: ${POSTGRES_USERNAME}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB_NAME}
      DB_PORT: ${POSTGRES_DB_PORT}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
      ADMIN_USERNAME: ${DJANGO_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
      DEV_MODE: TRUE
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
      args:
        - DEV_MODE=TRUE
    env_file:
      - ./.env
    ports:
      - 443:443
      - 80:80
      - 8080:8080
    depends_on:
      - backend
      - admin-panel

  admin-panel:
    volumes:
      - ./admin-panel/:/app/:cached
    env_file:
      - ./.env
    environment:
      WATCHPACK_POLLING: true
    build:
      context: ./admin-panel
      args:
        - DEV_MODE=TRUE

  db:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PORT: ${POSTGRES_DB_PORT}
    volumes:
      - ./data/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 1s
      timeout: 1s
      retries: 10
